extends ../../templates/template 

append h1 
    h1 Optimización de selectores


append content 
    article(id="1" class="content")
        p Hay diferencias en performance según el tipo de selector, pero son muy poco significativas y no debemos escoger el selector en base a esto.

        p Aún así, vemos que los selectores menos performant suelen tener otro tipo de problemas: son más específicos, por lo que nuestro codigo se volvería más acoplado, complejo y difícil de mantener (tal y como veíamos en el video sobre especificidad en el curso -> Visualiza la calidad de tu CSS: Especificidad de los selectores), y además tienden a ser más complicados de leer y entender.

        p Class selectors vs ID selectors

        p En los capítulos se recomienda el uso de clases por encima de identificadores, existe el libro de Steve Souders de Event Faster Websites, que es verdad que entonces hablaba de CSS2, en el capitulo de Types of Selectors habla del orden de eficiencia de los selectores de los mas simples (least costly) a los mas complejos (most expensive) en el siguiente orden:

        ul.ts-4 
            li 
                strong ID Selectors (#example {})
            li 
                strong Class selectors (.example {})
            li 
                strong Type selectors (a {})
            li 
                strong Siblings (h1 + #example {})
            li 
                strong Child (#example > a {})
            li 
                strong Descendant (#example a {})
            li 
                strong Universal (* {})
            li 
                strong Atrributes ([href="#example"] {})
            li 
                strong Pseudo clases (a:hover {})

        p Dicho esto, él mismo realizaba esta hipótesis (2009)
        p For most web sites, the possible performance gains from optimizing CSS selectors will be small, and are not worth the costs. There are some types of CSS rules and interactions with JavaScript that can make a page noticeably slower. This is where the focus should be.
        p En 2013 Google Page Speed Insides eliminó también la regla de "Use efficient CSS selectors" y en 2017 escribian "Performance of CSS Selectors Is Still Irrelevant" 

        p Lanzo la pregunta/abro debate:
        p ¿Actualmente importa la performance de los selectores y tendríamos que tenerlo en cuenta a la hora de escribir (¿puedo decir programar? :)) nuestros CSS? ¿Priorizamos la semantica vs la performance? ¿Podemos conseguir ambas?

