extends ../../templates/template 

append h1 
    h1 CSS es un lenguaje de programación


append content 
    article(id="1" class="content")
        h2 CSS en combinación con HTML
        p CSS, o Cascading Style Sheets, es un lenguaje utilizado para describir la presentación de un documento escrito en HTML o XML. Aunque por sí solo no se considera un lenguaje de programación completo como JavaScript o Python, en combinación con HTML, CSS puede ser visto como una parte fundamental del proceso de programación web, ya que juntos controlan el comportamiento visual y lógico de las interfaces de usuario en la web.

        p Un lenguaje de programación se define generalmente como un conjunto de instrucciones o secuencias de órdenes que controlan el comportamiento de un sistema informático. 

        p Si bien CSS no tiene la capacidad de realizar operaciones lógicas complejas o manejar datos como lo haría un lenguaje de programación tradicional, sí permite definir cómo se presentan y organizan los elementos de una página web, lo que influye directamente en la experiencia del usuario y en cómo interactúa con el sistema.

        p En este sentido, CSS actúa como un "lenguaje de presentación" que complementa al HTML, definiendo estilos como colores, fuentes, márgenes, alineaciones y otros aspectos visuales que son cruciales para la interfaz de usuario. Juntos, HTML y CSS forman una base sólida para la construcción de sitios web, donde HTML estructura el contenido y CSS controla la apariencia y el diseño, guiando el comportamiento visual del sistema en respuesta a la interacción del usuario.


    article(id="2" class="content")
        h2 CSS turing complete
        p Normalemente se dice que para que un lenguaje sea considearado como lenguaje de programación necesita ser 
            strong.ts-3 Turing complete.

        p CSS + HTML + entrada del usuario es Turing completo.

        p ¡CSS es un lenguaje de programación , así que puedes aprender otros lenguajes vinculando nuevos conceptos con lo que ya sabes sobre CSS!

        p Este articulo 
            a(href="https://notlaura.com/is-css-turing-complete/" target="_blank").link CSS turing
            |   nos muestra como CSS es considerado turing complete.

    article(id="3" class="content")               
        h2 Juegos hechos con CSS sin JS
        ul 
            li: a(href="https://codepen.io/jcoulterdesign/pen/NOMeEb" target="_blank").link The mine
            li: a(href="https://github.com/propjockey/css-sweeper" target="_blank").link Buscaminas
            li: a(href="https://codepen.io/collection/AKkZro?cursor=ZD0xJm89MSZwPTEmdj03" target="_blank").link Juegos Codepen

        p El desarrollador de Buscaminas muestra en su articulo como CSS es un lenguaje de programación gracias al truco Space Toggle.
        ul 
            li 
                p Si su --css-var contiene un espacio 
                    strong.ts-1 --toggler:&nbsp;&nbsp;&nbsp; ;
                    | , entonces se puede agregar a cualquier cosa (cualquier cantidad de veces) sin cambiar el valor
                div: pre: code.language-css 
                    | --toggler: ;
                    | --red-if-toggler: var(--toggler) red;
                    | background: var(--red-if-toggler, green); /* will be red! */
            li 
                p Si su --css-var se mantiene 
                    strong.ts-1 initial
                    | 
                    strong.ts-1 --toggler: initial;
                    | , (o nunca se definió), entonces se puede agregar a cualquier cosa para forzar la reserva cuando se hace referencia a ella 
                div: pre: code.language-css 
                    |  --toggler: initial;
                    |  --red-if-toggler: var(--toggler) red;
                    |  background: var(--red-if-toggler, green); /* will be green! */
            li 
                p Los conmutadores espaciales se pueden combinar para la lógica AND:
                div: pre: code.language-css 
                    |   --red-if-togglersalltrue: var(--tog1) var(--tog2) var(--tog3) red;
            li 
                p Los espacios se pueden combinar para la lógica OR:
                div: pre: code.language-css 
                    |   --red-if-anytogglertrue: var(--tog1, var(--tog2, var(--tog3))) red;
            li 
                p Los Checkboxes (and radio buttons) son una excelente fuente para alternar espacios
                div: pre: code.language-css 
                    |   #common-css-var-area { /* default any "not" values to truthy */ --not-flagged: ; }
                    |   #mycheckbox:checked ~ #common-css-var-area { --flagged: ; --not-flagged: initial; }
                    |   #anotherbox:checked ~ #common-css-var-area { --open: ; }
                    |   #common-css-var-area {
                    |     --yellow-if-flagged-and-open: var(--open) var(--flagged) yellow;
                    |     --white-if-not-flagged-and-open: var(--open) var(--not-flagged) white;
                    |     --red-if-flagged: var(--flagged) red;
                    |     color: var(--yellow-if-flagged-and-open, var(--white-if-not-flagged-and-open, var(--red-if-flagged, black)))
                    |   }
                    |   /* color will be black if not flagged and not open */

        div: pre: code.language-css 
            |   #common-css-var-area { /* default any "not" values to truthy */ --not-flagged: ; }
            |   #mycheckbox:checked ~ #common-css-var-area { --flagged: ; --not-flagged: initial; }
            |   #anotherbox:checked ~ #common-css-var-area { --open: ; }
            |   #common-css-var-area {
            |     --yellow-if-flagged-and-open: var(--open) var(--flagged) yellow;
            |     --white-if-not-flagged-and-open: var(--open) var(--not-flagged) white;
            |     --red-if-flagged: var(--flagged) red;
            |     color: var(--yellow-if-flagged-and-open, var(--white-if-not-flagged-and-open, var(--red-if-flagged, black)))
            |   }
            |   /* color will be black if not flagged and not open */            

append submenu 
    -submenuLinks = [[1,'CSS en combinación con HTML'],[2,'CSS turing complete'],[3,'Juegos hechos con CSS sin JS']]
    +submenu(submenuLinks)